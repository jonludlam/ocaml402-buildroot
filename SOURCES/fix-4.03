commit 7c04a70acc97d4e3e1a0f41f9d77509795e5aa9b
Author: Jon Ludlam <jonathan.ludlam@citrix.com>
Date:   Thu Dec 4 19:12:21 2014 +0000

    Fix following change in OCaml to not define [u]int{32,64}
    
    Signed-off-by: Jon Ludlam <jonathan.ludlam@citrix.com>

diff --git a/lib/backtrace_stubs.c b/lib/backtrace_stubs.c
index 647114d..cffe5d9 100644
--- a/lib/backtrace_stubs.c
+++ b/lib/backtrace_stubs.c
@@ -127,7 +127,7 @@ static void extract_location_info(frame_descr * d,
                                   /*out*/ struct loc_info * li)
 {
   uintnat infoptr;
-  uint32 info1, info2;
+  uint32_t info1, info2;
 
   /* If no debugging information available, print nothing.
      When everything is compiled with -g, this corresponds to
@@ -142,8 +142,8 @@ static void extract_location_info(frame_descr * d,
              sizeof(char *) + sizeof(short) + sizeof(short) +
              sizeof(short) * d->num_live + sizeof(frame_descr *) - 1)
             & -sizeof(frame_descr *);
-  info1 = ((uint32 *)infoptr)[0];
-  info2 = ((uint32 *)infoptr)[1];
+  info1 = ((uint32_t *)infoptr)[0];
+  info2 = ((uint32_t *)infoptr)[1];
   /* Format of the two info words:
        llllllllllllllllllll aaaaaaaa bbbbbbbbbb nnnnnnnnnnnnnnnnnnnnnnnn kk
                           44       36         26                       2  0
diff --git a/lib/ocaml_utils.h b/lib/ocaml_utils.h
index 125b6b5..afffc27 100644
--- a/lib/ocaml_utils.h
+++ b/lib/ocaml_utils.h
@@ -24,7 +24,7 @@
 #  define Int63_val(v) Int64_val(v)
 #endif
 
-typedef int64 int63;
+typedef int64_t int63;
 
 #define DEFINE_INT63_CONSTANT(name,z) \
   CAMLprim value name(value __unused v_unit) { return caml_alloc_int63(z); }
